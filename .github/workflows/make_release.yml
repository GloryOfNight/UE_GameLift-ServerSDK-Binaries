name: Make release

on:
  workflow_dispatch:
    inputs:
      gamelift:
        description: 'GameLift ZIPed sources'
        default: 'GameLift-Cpp-ServerSDK-5.0.4'
        required: true
        type: string
      tag:
        description: 'A version tag'
        default: '0.0'
        required: true
        type: string

jobs:
  gamelift_build_linux_x64:
    name: Build and upload Linux binary
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Download and unzip gamelift
      run: |
       sudo apt-get update
       sudo apt-get install -y unzip
       wget https://gamelift-server-sdk-release.s3.us-west-2.amazonaws.com/cpp/${{ inputs.gamelift }}.zip -O gamelift.zip
       unzip -q gamelift.zip
       echo "download and unzip gamelift finished, files:"
       ls

    - name: Install tools
      run: |
       sudo apt-get update
       sudo apt-get install -y cmake
       sudo apt-get install -y gcc
       sudo apt-get install -y g++
       
    - name: Download and build OpenSSL 1.1.1n
      run: |
        wget -c https://www.openssl.org/source/old/1.1.1/openssl-1.1.1n.tar.gz -O - | tar -xz
        echo "download and unzip openssl finished, files:"
        ls
        cd openssl-1.1.1n
        ./config no-shared
        make -j

    - name: Configure and build
      run: |
        export OPENSSL_ROOT_DIR=${{ github.workspace }}/openssl-1.1.1n
        echo $OPENSSL_ROOT_DIR
        cd ${{ inputs.gamelift }}
        cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_FOR_UNREAL=1 -DRUN_CLANG_FORMAT=0
        cmake --build build -j

  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    - name: Install tools
      run: |
        choco install cmake
        choco install curl
        choco install 7zip
        
    - name: Download and unzip gamelift
      run: |
        curl -o gamelift.zip https://gamelift-server-sdk-release.s3.us-west-2.amazonaws.com/cpp/${{ inputs.gamelift }}.zip
        7z e gamelift.zip -o ${{ inputs.gamelift }}

    - name: Configure and build
      run: |
        cd ${{ inputs.gamelift }}
        cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_FOR_UNREAL=1 -DRUN_CLANG_FORMAT=0
        cmake --build build --config Release
        
      
       
